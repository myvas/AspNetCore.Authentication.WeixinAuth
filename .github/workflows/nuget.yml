name: deploy

on:
  release:
    types: [ published ]

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]
    steps:
    - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

    - name: Check out repository code
      uses: actions/checkout@v4
    - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
    - run: echo "The workflow is now ready to test your code on the runner."
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}

    - name: Setup dotnet 6.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
    - name: Setup dotnet 7.0.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
    - name: Setup dotnet ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Display dotnet version
      run: dotnet --version

    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

    - name: Test with the dotnet CLI
      run: dotnet test --no-build --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v4
      with:
        name: dontet-results-${{ matrix.dotnet-version }}
        path: TestResults-${{ matrix.dotnet-version }}
      if: ${{ failure() }}

    - name: Create the NuGet package (.nupkg)
      run: dotnet pack -c Release
    - name: Publish the NuGet package to nuget.org
      run: dotnet nuget push "**/bin/Release/*.nupkg" -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
        # You should create this repository secret on https://github.com/myvas/AspNetCore.Email/settings/secrets/actions
    - run: echo "This job's status is ${{ job.status }}."
